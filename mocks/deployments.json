[
  {
    "metadata": {
      "name": "chancer",
      "namespace": "default",
      "selfLink": "/apis/extensions/v1beta1/namespaces/default/deployments/chancer",
      "uid": "a1ed318a-cb00-11e7-b0ac-42010af00149",
      "resourceVersion": "86873",
      "generation": 10,
      "creationTimestamp": "2017-11-16T19:02:03Z",
      "labels": {
        "app": "chancer"
      },
      "annotations": {
        "deployment.kubernetes.io/revision": "1"
      }
    },
    "spec": {
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app": "chancer"
        }
      },
      "template": {
        "metadata": {
          "creationTimestamp": null,
          "labels": {
            "app": "chancer"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "chancer",
              "image": "darrenmce/chancer",
              "ports": [
                {
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "50m",
                  "memory": "64Mi"
                }
              },
              "terminationMessagePath": "/dev/termination-log",
              "terminationMessagePolicy": "File",
              "imagePullPolicy": "Always"
            }
          ],
          "restartPolicy": "Always",
          "terminationGracePeriodSeconds": 30,
          "dnsPolicy": "ClusterFirst",
          "securityContext": {},
          "schedulerName": "default-scheduler"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 1
        }
      }
    },
    "status": {
      "observedGeneration": 10,
      "replicas": 3,
      "updatedReplicas": 3,
      "readyReplicas": 3,
      "availableReplicas": 3,
      "conditions": [
        {
          "type": "Available",
          "status": "True",
          "lastUpdateTime": "2017-11-17T15:47:11Z",
          "lastTransitionTime": "2017-11-17T15:47:11Z",
          "reason": "MinimumReplicasAvailable",
          "message": "Deployment has minimum availability."
        }
      ]
    }
  },
  {
    "metadata": {
      "name": "mustard",
      "namespace": "default",
      "selfLink": "/apis/extensions/v1beta1/namespaces/default/deployments/mustard",
      "uid": "39f7aac7-ce28-11e7-b0ac-42010af00149",
      "resourceVersion": "489450",
      "generation": 1,
      "creationTimestamp": "2017-11-20T19:23:02Z",
      "labels": {
        "app": "mustard"
      },
      "annotations": {
        "deployment.kubernetes.io/revision": "1",
        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"mustard\"},\"name\":\"mustard\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"mustard\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"mustard\"}},\"spec\":{\"containers\":[{\"image\":\"darrenmce/mustard\",\"imagePullPolicy\":\"Always\",\"name\":\"mustard-jar\",\"ports\":[{\"containerPort\":8080,\"protocol\":\"TCP\"}],\"resources\":{\"requests\":{\"cpu\":\"50m\",\"memory\":\"64Mi\"}}}]}}}}\n"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "mustard"
        }
      },
      "template": {
        "metadata": {
          "creationTimestamp": null,
          "labels": {
            "app": "mustard"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "mustard-jar",
              "image": "darrenmce/mustard",
              "ports": [
                {
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "50m",
                  "memory": "64Mi"
                }
              },
              "terminationMessagePath": "/dev/termination-log",
              "terminationMessagePolicy": "File",
              "imagePullPolicy": "Always"
            }
          ],
          "restartPolicy": "Always",
          "terminationGracePeriodSeconds": 30,
          "dnsPolicy": "ClusterFirst",
          "securityContext": {},
          "schedulerName": "default-scheduler"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 1
        }
      }
    },
    "status": {
      "observedGeneration": 1,
      "replicas": 1,
      "updatedReplicas": 1,
      "readyReplicas": 1,
      "availableReplicas": 1,
      "conditions": [
        {
          "type": "Available",
          "status": "True",
          "lastUpdateTime": "2017-11-20T19:23:02Z",
          "lastTransitionTime": "2017-11-20T19:23:02Z",
          "reason": "MinimumReplicasAvailable",
          "message": "Deployment has minimum availability."
        }
      ]
    }
  },
  {
    "metadata": {
      "name": "nginx-nginx-ingress-controller",
      "namespace": "default",
      "selfLink": "/apis/extensions/v1beta1/namespaces/default/deployments/nginx-nginx-ingress-controller",
      "uid": "8488e1b0-cbcb-11e7-b0ac-42010af00149",
      "resourceVersion": "104078",
      "generation": 1,
      "creationTimestamp": "2017-11-17T19:14:22Z",
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-0.8.12",
        "component": "controller",
        "heritage": "Tiller",
        "release": "nginx"
      },
      "annotations": {
        "deployment.kubernetes.io/revision": "1"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "nginx-ingress",
          "component": "controller",
          "release": "nginx"
        }
      },
      "template": {
        "metadata": {
          "creationTimestamp": null,
          "labels": {
            "app": "nginx-ingress",
            "component": "controller",
            "release": "nginx"
          },
          "annotations": {
            "checksum/config": "07a620b093a4f462c5b37c6b10bf17df948041318a99bf97d07ccdbd0fb480b7"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "nginx-ingress-controller",
              "image": "gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.15",
              "args": [
                "/nginx-ingress-controller",
                "--default-backend-service=default/nginx-nginx-ingress-default-backend",
                "--election-id=ingress-controller-leader",
                "--ingress-class=nginx",
                "--configmap=default/nginx-nginx-ingress-controller"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                },
                {
                  "name": "https",
                  "containerPort": 443,
                  "protocol": "TCP"
                }
              ],
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "resources": {},
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 1,
                "periodSeconds": 10,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP"
                },
                "timeoutSeconds": 1,
                "periodSeconds": 10,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "terminationMessagePath": "/dev/termination-log",
              "terminationMessagePolicy": "File",
              "imagePullPolicy": "IfNotPresent"
            }
          ],
          "restartPolicy": "Always",
          "terminationGracePeriodSeconds": 60,
          "dnsPolicy": "ClusterFirst",
          "serviceAccountName": "default",
          "serviceAccount": "default",
          "securityContext": {},
          "schedulerName": "default-scheduler"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 1
        }
      }
    },
    "status": {
      "observedGeneration": 1,
      "replicas": 1,
      "updatedReplicas": 1,
      "readyReplicas": 1,
      "availableReplicas": 1,
      "conditions": [
        {
          "type": "Available",
          "status": "True",
          "lastUpdateTime": "2017-11-17T19:14:22Z",
          "lastTransitionTime": "2017-11-17T19:14:22Z",
          "reason": "MinimumReplicasAvailable",
          "message": "Deployment has minimum availability."
        }
      ]
    }
  },
  {
    "metadata": {
      "name": "nginx-nginx-ingress-default-backend",
      "namespace": "default",
      "selfLink": "/apis/extensions/v1beta1/namespaces/default/deployments/nginx-nginx-ingress-default-backend",
      "uid": "848a42e0-cbcb-11e7-b0ac-42010af00149",
      "resourceVersion": "104057",
      "generation": 1,
      "creationTimestamp": "2017-11-17T19:14:22Z",
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-0.8.12",
        "component": "default-backend",
        "heritage": "Tiller",
        "release": "nginx"
      },
      "annotations": {
        "deployment.kubernetes.io/revision": "1"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "nginx-ingress",
          "component": "default-backend",
          "release": "nginx"
        }
      },
      "template": {
        "metadata": {
          "creationTimestamp": null,
          "labels": {
            "app": "nginx-ingress",
            "component": "default-backend",
            "release": "nginx"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "nginx-ingress-default-backend",
              "image": "gcr.io/google_containers/defaultbackend:1.3",
              "ports": [
                {
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "resources": {},
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "terminationMessagePath": "/dev/termination-log",
              "terminationMessagePolicy": "File",
              "imagePullPolicy": "IfNotPresent"
            }
          ],
          "restartPolicy": "Always",
          "terminationGracePeriodSeconds": 60,
          "dnsPolicy": "ClusterFirst",
          "securityContext": {},
          "schedulerName": "default-scheduler"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 1
        }
      }
    },
    "status": {
      "observedGeneration": 1,
      "replicas": 1,
      "updatedReplicas": 1,
      "readyReplicas": 1,
      "availableReplicas": 1,
      "conditions": [
        {
          "type": "Available",
          "status": "True",
          "lastUpdateTime": "2017-11-17T19:14:22Z",
          "lastTransitionTime": "2017-11-17T19:14:22Z",
          "reason": "MinimumReplicasAvailable",
          "message": "Deployment has minimum availability."
        }
      ]
    }
  }
]